var mysql = require('mysql');

exports.randomString = function(len, pool = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789') {
	var text = "";

	for (var i = 0; i < len; i++)
		text += pool.charAt(Math.floor(Math.random() * pool.length));

	return text;
}

exports.isNumeric = function(n) {
	return !isNaN(parseFloat(n)) && isFinite(n);
}

exports.getRoomInfo = function(id, req, callback) {
	if (req.session.acc.id === id)
		callback(req.session.acc);
	else {
		var connection = mysql.createConnection({
			host: process.env.DB_HOST || 'localhost',
			user: process.env.DB_USER || 'root',
			password: process.env.DB_PASS || '',
			database: process.env.DB_NAME || ''
		});
		connection.query('SELECT * FROM users WHERE id = ? LIMIT 1', [id], function(err, rows, fields) {
			if (err || rows.length == 0)
				callback(null);
			else
				callback(rows[0]);
		});
	}
}

exports.saveNewMessage = async function(room, acc, message) {
	var connection = mysql.createConnection({
		host: process.env.DB_HOST || 'localhost',
		user: process.env.DB_USER || 'root',
		password: process.env.DB_PASS || '',
		database: process.env.DB_NAME || ''
	});

	var msg = {
		channel_id: room,
		user_id: acc.id,
		user_name: acc.name,
		message: message,
		created_at: Math.floor(Date.now() / 1000)
	};

	connection.query('INSERT INTO messages SET ?', msg, function(err, rows, fields) {
		if (err) throw err;
	});
}

exports.getMessagesFromRoom = function(room, callback) {
	var connection = mysql.createConnection({
		host: process.env.DB_HOST || 'localhost',
		user: process.env.DB_USER || 'root',
		password: process.env.DB_PASS || '',
		database: process.env.DB_NAME || ''
	});

	connection.query('SELECT * FROM messages WHERE channel_id = ? ORDER BY id', [room], function(err, rows, fields) {
		//if error, return empty array (act as if there's no messages)
		if (err) callback([]);

		//send all messages
		callback(rows);
	});
}
