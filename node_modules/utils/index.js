var mysql = require('mysql');
var mysqlModel = require('mysql-model');

exports.randomString = function(len, pool = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789') {
	var text = "";

	for (var i = 0; i < len; i++)
		text += pool.charAt(Math.floor(Math.random() * pool.length));

	return text;
}

exports.isNumeric = function(n) {
	return !isNaN(parseFloat(n)) && isFinite(n);
}

exports.getRoomInfo = function(id, req, callback) {
	if (req.session.acc.id === id)
		callback(req.session.acc);
	else {
		var MyAppModel = mysqlModel.createConnection({
			host: process.env.DBHOST || 'localhost',
			user: process.env.DBUSER || 'root',
			pass: process.env.DBPASS || '',
			database: process.env.DBNAME || ''
		});

		var User = MyAppModel.extend({
		  tableName: 'users',
		});

		user = new User();
		user.find('first', {where: 'id = ' + id}, function(err, row) {
			callback(row);
		});
	}
}

exports.saveNewMessage = async function(room, acc, message) {
	var MyAppModel = mysqlModel.createConnection({
		host: process.env.DBHOST || 'localhost',
		user: process.env.DBUSER || 'root',
		pass: process.env.DBPASS || '',
		database: process.env.DBNAME || ''
	});

	var Message = MyAppModel.extend({
	  tableName: 'messages',
	});

	message = new Message({
		channel_id: room,
		user_id: acc.id,
		user_name: acc.name,
		message: message,
		created_at: Math.floor(Date.now() / 1000)
	});
	message.save();
}

exports.getMessagesFromRoom = function(room, callback) {
	var MyAppModel = mysqlModel.createConnection({
		host: process.env.DBHOST || 'localhost',
		user: process.env.DBUSER || 'root',
		pass: process.env.DBPASS || '',
		database: process.env.DBNAME || ''
	});

	var Message = MyAppModel.extend({
	  tableName: 'messages',
	});

	message = new Message();
	message.find('all', {where: 'channel_id = ' + mysql.escape(room), group: 'id'}, function(err, rows, fields) {
		//if error, return empty array (act as if there's no messages)
		if (err) callback([]);

		//send all messages
		callback(rows);
	});
}
